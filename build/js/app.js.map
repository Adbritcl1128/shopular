{"version":3,"sources":["app.js"],"names":["angular","module","controller","InventoryController","$inject","ItemService","vm","newItem","sortType","sortReverse","tax","inventoryList","getAllItems","add","item","addItem","totalPrice","price","discount","factory","items","JSON","parse","localStorage","getItem","Number","quantity","name","color","push","setItem","toJson"],"mappings":";;;;AAAC,aAAW;AACV;;AAEFA,UAAQC,MAAR,CAAe,WAAf,EAA4B,EAA5B;AAEC,CALA,GAAD;;AAOC,aAAW;AACV;;AAEAD,UAAQC,MAAR,CAAe,WAAf,EACCC,UADD,CACY,qBADZ,EACmCC,mBADnC;;AAGAA,sBAAoBC,OAApB,GAA8B,CAAC,aAAD,CAA9B;AACA,WAASD,mBAAT,CAA6BE,WAA7B,EAA0C;AACxC,QAAIC,KAAK,IAAT;;AAEAA,OAAGC,OAAH,GAAa,EAAb;AACAD,OAAGE,QAAH,GAAc,OAAd;AACAF,OAAGG,WAAH,GAAiB,KAAjB;AACAH,OAAGI,GAAH,GAAS,MAAT;;AAEAJ,OAAGK,aAAH,GAAmBN,YAAYO,WAAZ,EAAnB;;AAEAN,OAAGO,GAAH,GAAS,SAASA,GAAT,CAAaC,IAAb,EAAmB;AAC1BT,kBAAYU,OAAZ,CAAoBD,IAApB;AACAR,SAAGC,OAAH,GAAa,EAAb;AAED,KAJD;;AAOAD,OAAGU,UAAH,GAAgB,SAASA,UAAT,CAAoBF,IAApB,EAA0B;AACxC,UAAIG,QAASH,KAAKG,KAAL,GAAaH,KAAKI,QAA/B;AACA,UAAIR,MAAMO,QAAQX,GAAGI,GAArB;AACA,aAAOO,QAAQP,GAAf;AAED,KALD;;AAOAJ,OAAGS,OAAH,GAAa,SAASA,OAAT,CAAiBD,IAAjB,EAAuB;AAClCT,kBAAYU,OAAZ,CAAoBD,IAApB;AACAR,SAAGC,OAAH,GAAa,EAAb;AAKD,KAPD;AASD;AAGF,CA3CA,GAAD;;AA6CC,aAAW;AACV;;AAEAP,UAAQC,MAAR,CAAe,WAAf,EAA4BkB,OAA5B,CAAoC,aAApC,EAAmDd,WAAnD;;AAGA,WAASA,WAAT,GAAuB;;AAErB,QAAIe,QAAQC,KAAKC,KAAL,CAAWC,aAAaC,OAAb,CAAqB,OAArB,CAAX,KAA6C,EAAzD;;AAEA,aAASZ,WAAT,GAAuB;AACrB,aAAOQ,KAAP;AACD;;AAGD,aAASL,OAAT,CAAiBD,IAAjB,EAAuB;;AAGrBA,WAAKG,KAAL,GAAaQ,OAAOX,KAAKG,KAAZ,CAAb;AACAH,WAAKY,QAAL,GAAgBD,OAAOX,KAAKY,QAAZ,CAAhB;AACAZ,WAAKI,QAAL,GAAgBO,OAAOX,KAAKI,QAAZ,CAAhB;;AAGA,UAAI,QAAOJ,IAAP,yCAAOA,IAAP,OAAiB,QAArB,EAA+B;AAC7B;AACD;;AAED,UAAI,OAAOA,KAAKa,IAAZ,KAAsB,QAAtB,IACJ,OAAOb,KAAKG,KAAZ,KAAuB,QADnB,IAEJ,OAAOH,KAAKY,QAAZ,KAA0B,QAF1B,EAEoC;AAClC;AACD;;AAED,UAAI,OAAOZ,KAAKc,KAAZ,KAAuB,QAAvB,IAAmCd,KAAKc,KAA5C,EAAmD;AACjD;AACD;;AAED,UAAI,OAAOd,KAAKI,QAAZ,KAA0B,QAA1B,IAAsCJ,KAAKI,QAA/C,EAAyD;AACvD;AACD;;AAED;AACA;AACA;;;AAOAE,YAAMS,IAAN,CAAW;AACTF,cAAMb,KAAKa,IADF;AAETV,eAAOH,KAAKG,KAFH;AAGTS,kBAAUZ,KAAKY,QAHN;AAITE,eAAOd,KAAKc,KAJH;AAKTV,kBAAUJ,KAAKI;AALN,OAAX;AAOAK,mBAAaO,OAAb,CAAqB,OAArB,EAA8B9B,QAAQ+B,MAAR,CAAeX,KAAf,CAA9B;AACD;;AAED,WAAO;AACLL,eAASA,OADJ;AAELH,mBAAaA;AAFR,KAAP;AAID;AAEF,CAlEA,GAAD;;AAoEA","file":"app.js","sourcesContent":["(function() {\n  'use strict';\n\nangular.module('inventory', []);\n\n}());\n\n(function() {\n  'use strict';\n\n  angular.module('inventory')\n  .controller('InventoryController', InventoryController);\n\n  InventoryController.$inject = ['ItemService'];\n  function InventoryController(ItemService) {\n    let vm = this;\n\n    vm.newItem = {};\n    vm.sortType = 'price';\n    vm.sortReverse = false;\n    vm.tax = 0.0575;\n\n    vm.inventoryList = ItemService.getAllItems();\n\n    vm.add = function add(item) {\n      ItemService.addItem(item);\n      vm.newItem = {};\n\n    };\n\n\n    vm.totalPrice = function totalPrice(item) {\n      let price = (item.price - item.discount);\n      let tax = price * vm.tax;\n      return price + tax;\n\n    };\n\n    vm.addItem = function addItem(item) {\n      ItemService.addItem(item);\n      vm.newItem = {};\n\n\n\n\n    };\n\n  }\n\n\n}());\n\n(function() {\n  'use strict';\n\n  angular.module('inventory').factory('ItemService', ItemService);\n\n\n  function ItemService() {\n\n    let items = JSON.parse(localStorage.getItem('items')) || [];\n\n    function getAllItems() {\n      return items;\n    }\n\n\n    function addItem(item) {\n\n\n      item.price = Number(item.price);\n      item.quantity = Number(item.quantity);\n      item.discount = Number(item.discount);\n\n\n      if (typeof(item) !== 'object') {\n        return;\n      }\n\n      if (typeof(item.name) !== 'string' ||\n      typeof(item.price) !== 'number' ||\n      typeof(item.quantity) !== 'number') {\n        return;\n      }\n\n      if (typeof(item.color) !== 'string' && item.color) {\n        return;\n      }\n\n      if (typeof(item.discount) !== 'number' && item.discount) {\n        return;\n      }\n\n      // Number.isNaN(item) ||\n      // typeof(item.quantity) !== 'number' ||\n      // Number.isNaN(item) || item.price < 0.01 ||\n\n\n\n\n\n\n      items.push({\n        name: item.name,\n        price: item.price,\n        quantity: item.quantity,\n        color: item.color,\n        discount: item.discount\n      });\n      localStorage.setItem('items', angular.toJson(items));\n    }\n\n    return {\n      addItem: addItem,\n      getAllItems: getAllItems\n    };\n  }\n\n}());\n\n//# sourceMappingURL=app.js.map"]}